/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.sav.bot.dataflos.gui;

import sk.sav.bot.dataflos.entity.LitZdroj;
import sk.sav.bot.dataflos.entity.LzdrojAutoriAsoc;
import sk.sav.bot.dataflos.entity.interf.Entity;
import sk.sav.bot.dataflos.main.MainFrame;
import sk.sav.bot.dataflos.models.LiteraturesSearchModel;
import sk.sav.bot.dataflos.util.HibernateQuery;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JTable;

/**
 *
 * @author Jakub
 */
public class LiteratureSearchForm extends javax.swing.JFrame {

    HibernateQuery hq;
    
    MainFrame mainFrame;
    
    List<Entity> container;
    LiteraturesSearchModel searchModel;
    
    public static LiteratureSearchForm searchForm = null;
    
    /**
     * Creates new form LiteratureSearch
     */
    private LiteratureSearchForm(MainFrame mainFrame, HibernateQuery hq) {
        
        this.hq = hq;
        this.mainFrame = mainFrame;
        
        initComponents();
        
        this.jTableLitSourceSearch.addMouseListener(new LitSourcesListDoubleClick());
        
        container = hq.getAllRecords("LitZdroj");
        
        searchModel = new LiteraturesSearchModel(container);
        jTableLitSourceSearch.setModel(searchModel);
        
        this.jTableLitSourceSearch.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        setColSizes();
    }
    
    public static LiteratureSearchForm getInstance(MainFrame mainFrame, HibernateQuery hq) {
        
        if (searchForm == null){
            searchForm = new LiteratureSearchForm(mainFrame, hq);
        }
        
        searchForm.setVisible(true);
        
        return searchForm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfCisloLit = new javax.swing.JTextField();
        tfAutorPubl = new javax.swing.JTextField();
        tfRokVyd = new javax.swing.JTextField();
        tfCasopis = new javax.swing.JTextField();
        tfVyrazNazov = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnAddNewLitSource = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLitSourceSearch = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Výber literatúry");
        setAlwaysOnTop(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Vyhľadať podľa:");

        jLabel2.setText("číslo literatúry");

        jLabel3.setText("(spolu)autor publikácie");

        jLabel4.setText("rok vydania");

        jLabel5.setText("názov časopisu");

        jLabel6.setText("názov publikácie");

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        btnSearch.setText("   Hľadať");
        btnSearch.setActionCommand("Hľadať");
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSearchMouseClicked(evt);
            }
        });

        jLabel8.setText("zadaj celý názov alebo jeho časť v jednom alebo viac kritériách");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfCisloLit)
                                    .addComponent(tfAutorPubl)
                                    .addComponent(tfRokVyd)
                                    .addComponent(tfCasopis)
                                    .addComponent(tfVyrazNazov, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfCisloLit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfAutorPubl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfRokVyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfVyrazNazov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfCasopis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btnSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAddNewLitSource.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        btnAddNewLitSource.setText("   Pridať nový literárny zdroj");
        btnAddNewLitSource.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnAddNewLitSource.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddNewLitSourceMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Zoznam excerpovaných prác");

        jTableLitSourceSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableLitSourceSearch);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(jLabel7)
                .addContainerGap(343, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddNewLitSource))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(btnAddNewLitSource))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseClicked
        searchBy(tfCisloLit.getText().toLowerCase(), tfAutorPubl.getText().toLowerCase(), tfRokVyd.getText().toLowerCase(), tfCasopis.getText().toLowerCase(), tfVyrazNazov.getText().toLowerCase());
    }//GEN-LAST:event_btnSearchMouseClicked

    private void btnAddNewLitSourceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddNewLitSourceMouseClicked

        mainFrame.literatureAddNew();
        this.dispose();

    }//GEN-LAST:event_btnAddNewLitSourceMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewLitSource;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLitSourceSearch;
    private javax.swing.JTextField tfAutorPubl;
    private javax.swing.JTextField tfCasopis;
    private javax.swing.JTextField tfCisloLit;
    private javax.swing.JTextField tfRokVyd;
    private javax.swing.JTextField tfVyrazNazov;
    // End of variables declaration//GEN-END:variables

    private void searchBy(String ID, String autor, String rok, String casopis, String publikacia) {

        searchModel.setEmpty();
        setColSizes();
        
        String lzID;
        String lzAutor = "";
        String lzRok;
        String lzCasopis;
        String lzPublikacia;
        
        if (ID.isEmpty() && autor.isEmpty() && rok.isEmpty() && casopis.isEmpty() && publikacia.isEmpty()) {
            for (Entity entity : this.container) {
                searchModel.addRow(entity);
            }
        } else {

            for (Entity entity : this.container) {
                LitZdroj lz = (LitZdroj) entity;
                
                lzID = String.valueOf(lz.getId()).toLowerCase();
                if (!autor.isEmpty()){
                    if (lz.getLzdrojAutoriAsocs() != null) {
                        StringBuilder autori= new StringBuilder();
                        for (Object object : lz.getLzdrojAutoriAsocs()) {
                            if (object instanceof LzdrojAutoriAsoc) {

                                LzdrojAutoriAsoc lzaa = (LzdrojAutoriAsoc) object;
                                //pre lepsiu citatelnost dame ciarku medzi menami a ak bola ciarka po priezvisku, tak tu odstranime
                                autori.append(lzaa.getMenaZberRev().getMeno().replace(",", "")).append(", ");
                            }
                        }
                        lzAutor = autori.toString().toLowerCase();
                    }
                } else {
                    lzAutor = "";
                }
                lzRok = String.valueOf(lz.getRok());
                lzCasopis = lz.getCasopis() == null ? "" : lz.getCasopis().getMeno().toLowerCase();
                String lzKniha = lz.getNazovKnihy() == null ? "" : lz.getNazovKnihy().toLowerCase();
                String lzClanok = lz.getNazovClanku() == null ? "" : lz.getNazovClanku().toLowerCase();
                lzPublikacia = lzKniha.concat(lzClanok);
                
                if ((lzID.indexOf(ID, 0) != -1) && (lzAutor.indexOf(autor, 0) != -1) && (lzRok.indexOf(rok, 0) != -1) && (lzCasopis.indexOf(casopis, 0) != -1) && (lzPublikacia.indexOf(publikacia, 0) != -1)) {
                    searchModel.addRow(entity);
                }
            }
        }
        searchModel.fireTableDataChanged();
    }

    private void setColSizes() {
        this.jTableLitSourceSearch.getColumnModel().getColumn(0).setPreferredWidth(70);
        this.jTableLitSourceSearch.getColumnModel().getColumn(1).setPreferredWidth(220);
        this.jTableLitSourceSearch.getColumnModel().getColumn(2).setPreferredWidth(80);
        this.jTableLitSourceSearch.getColumnModel().getColumn(3).setPreferredWidth(550);
        this.jTableLitSourceSearch.getColumnModel().getColumn(4).setPreferredWidth(190);
    }
        
    private class LitSourcesListDoubleClick extends MouseAdapter {

        @Override
        public void mouseClicked(MouseEvent e) {
            if (e.getClickCount() == 2) {
                int row = jTableLitSourceSearch.getSelectedRow();
                if (row > -1) {
                    
                    Object selected = searchModel.getLiteratures().get(row);
                    if (selected instanceof LitZdroj) {
                        LitZdroj lzdroj = (LitZdroj) selected;
                        mainFrame.literatureSelected(lzdroj);
                        LiteratureSearchForm.this.dispose();
                    }
                }
            }
        }
    }
    
}
